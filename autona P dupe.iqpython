{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\nelavator_motor_a = Motor(Ports.PORT1, False)\nelavator_motor_b = Motor(Ports.PORT6, True)\nelavator = MotorGroup(elavator_motor_a, elavator_motor_b)\nleft_drive_smart = Motor(Ports.PORT2, 0.5, False)\nright_drive_smart = Motor(Ports.PORT7, 0.5, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 200, 173, 76, MM, 1)\nrollers_motor_a = Motor(Ports.PORT8, True)\nrollers_motor_b = Motor(Ports.PORT9, False)\nrollers = MotorGroup(rollers_motor_a, rollers_motor_b)\ncontroller = Controller()\npneumatic_3 = Pneumatic(Ports.PORT3)\n\n\n\n# Make random actually random\ndef setRandomSeedUsingAccel():\n    wait(100, MSEC)\n    xaxis = brain_inertial.acceleration(XAXIS) * 1000\n    yaxis = brain_inertial.acceleration(YAXIS) * 1000\n    zaxis = brain_inertial.acceleration(ZAXIS) * 1000\n    urandom.seed(int(xaxis + yaxis + zaxis))\n    \n# Set random seed \nsetRandomSeedUsingAccel()\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n# \tAuthor:       VEX\n# \tCreated:\n# \tDescription:  VEXcode IQ Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\nrollers.set_velocity(100,PERCENT)\nrollers.set_max_torque(100,PERCENT)\nelavator.set_max_torque(100,PERCENT)\ndrivetrain.set_stopping(COAST)\nelavator.set_stopping(HOLD)\nelavator.set_velocity(100,PERCENT)\ndrivetrain.set_drive_velocity(100,PERCENT)\ndrivetrain.set_turn_velocity(25,PERCENT)\n# ------------------------------------------\n# part one\n\npneumatic_3.retract(CYLINDER1)\npneumatic_3.retract(CYLINDER2)\n\npneumatic_3.pump_off()\n\nrollers.spin(REVERSE)\ndrivetrain.drive_for(FORWARD,320,MM)\ndrivetrain.turn_for(RIGHT,34,DEGREES)\ndrivetrain.drive_for(FORWARD,194,MM)\nfor i in range(2):\n    drivetrain.drive_for(FORWARD,20,MM)\n    drivetrain.drive_for(REVERSE,20,MM)\ndrivetrain.drive_for(FORWARD,134,MM)\ndrivetrain.turn_for(LEFT,50.55,DEGREES)\n\ndrivetrain.drive_for(FORWARD,110,MM)\ndrivetrain.drive_for(REVERSE,30,MM)\ndrivetrain.set_turn_velocity(25,PERCENT)\n# turn between two reds\ndrivetrain.turn_for(LEFT,23.55,DEGREES)\ndrivetrain.set_turn_velocity(25,PERCENT)\ndrivetrain.set_timeout(3,SECONDS)\ndrivetrain.drive_for(FORWARD,350,MM)\ndrivetrain.turn_for(LEFT,35,DEGREES)\ndrivetrain.set_timeout(2.5,SECONDS)\ndrivetrain.drive_for(FORWARD,75,MM)\ndrivetrain.drive_for(REVERSE,500,MM,wait=False)\nwait(1.5,SECONDS)\n\ndrivetrain.set_timeout(2,SECONDS)\nelavator.spin_to_position(1500,DEGREES,wait=True)\nwait(1,SECONDS)\nelavator.spin_to_position(0,DEGREES,wait=False)\ndrivetrain.drive_for(FORWARD,50,MM)\ndrivetrain.set_turn_velocity(50,PERCENT)\ndrivetrain.turn_for(LEFT,13,DEGREES)\ndrivetrain.set_turn_velocity(25,PERCENT)\ndrivetrain.set_timeout(3,SECONDS)\ndrivetrain.drive_for(FORWARD,750,MM)\ndrivetrain.turn_for(LEFT,33.22,DEGREES)\ndrivetrain.set_timeout(1.5,SECONDS)\ndrivetrain.set_turn_velocity(100,PERCENT)\ndrivetrain.drive_for(REVERSE,400,MM)\n\npneumatic_3.pump_on()\nelavator.spin_to_position(272,DEGREES,wait=True)\npneumatic_3.extend(CYLINDER1)\npneumatic_3.extend(CYLINDER2)\ndrivetrain.set_timeout(0.25,SECONDS)\ndrivetrain.drive_for(FORWARD,15,MM)\ndrivetrain.drive_for(REVERSE,15,MM)\nwait(1,SECONDS)\npneumatic_3.retract(CYLINDER1)\npneumatic_3.retract(CYLINDER2)\ndrivetrain.set_turn_velocity(17,PERCENT)\npneumatic_3.pump_off()\nwait(0.5,SECONDS)\nelavator.spin_to_position(1500,DEGREES,wait=True)\nwait(0.5,SECONDS)\nelavator.spin_to_position(0,DEGREES,wait=True)\nwait(1,SECONDS)\ndrivetrain.set_timeout(3,SECONDS)\ndrivetrain.drive_for(FORWARD,320,MM)\ndrivetrain.set_timeout(2,SECONDS)\ndrivetrain.drive_for(REVERSE,320,MM)\ndrivetrain.turn_for(LEFT,27,DEGREES)\ndrivetrain.set_timeout(2,SECONDS)\ndrivetrain.drive_for(REVERSE,180,MM)\nelavator.spin_to_position(1500,DEGREES,wait=True)\nwait(1,SECONDS)\nelavator.spin_to_position(0,DEGREES,wait=True)\nrollers.stop()\nwait(0.75,SECONDS)\ndrivetrain.drive_for(FORWARD,750,MM)\n\n'''\n\n#Second part\ndrivetrain.set_drive_velocity(100,PERCENT)\nrollers.spin(REVERSE)\ndrivetrain.drive_for(FORWARD,120,MM)\n\ndrivetrain.turn_for(RIGHT,17.5,DEGREES)\ndrivetrain.set_drive_velocity(75,PERCENT)\ndrivetrain.set_timeout(3,SECONDS)\ndrivetrain.drive_for(FORWARD,220,MM)\ndrivetrain.drive_for(REVERSE,30,MM)\nwait(1,SECONDS)\ndrivetrain.turn_for(LEFT,32,DEGREES)\ndrivetrain.set_timeout(3,SECONDS)\ndrivetrain.drive_for(REVERSE,700,MM,wait=False)\nwait(1,SECONDS)\nelavator.spin_to_position(1500,DEGREES,wait=True)\nwait(1,SECONDS)\nelavator.spin_to_position(0,DEGREES,wait=False)\ndrivetrain.drive_for(FORWARD,500,MM)\n'''\n'''\n# Second part safe\nrollers.spin(REVERSE)\ndrivetrain.drive_for(FORWARD,320,MM)\ndrivetrain.turn_for(RIGHT,50.5,DEGREES)\ndrivetrain.drive_for(FORWARD,150,MM)\ndrivetrain.drive_for(REVERSE,20,MM)\ndrivetrain.turn_for(LEFT,10,DEGREES)\ndrivetrain.turn_for(RIGHT,10,DEGREES)\ndrivetrain.drive_for(FORWARD,150,MM)\nwait(1.5,SECONDS)\ndrivetrain.drive_for(REVERSE,80,MM)\ndrivetrain.turn_for(RIGHT,51,DEGREES)\ndrivetrain.set_timeout(1,SECONDS)\ndrivetrain.drive_for(REVERSE,300,MM)\ndrivetrain.turn_for(RIGHT,32,DEGREES)\ndrivetrain.set_timeout(1.5,SECONDS)\ndrivetrain.drive_for(REVERSE,600,MM)\nelavator.spin_to_position(1500,DEGREES,wait=True)\nwait(1,SECONDS)\nelavator.spin_to_position(0,DEGREES,wait=False)\n'''\n'''\n#DOES NOT FULLY WORK\n# turn to dump green\ndrivetrain.turn_for(LEFT,62.35,DEGREES)\ndrivetrain.set_timeout(1.5,SECONDS)\ndrivetrain.drive_for(REVERSE,575,MM)\n#drivetrain.drive_for(FORWARD,50,MM)\n#drivetrain.turn_for(RIGHT,5.5,DEGREES)\n\ndrivetrain.drive_for(REVERSE,100,MM)\nelavator.spin_to_position(1500,DEGREES,wait=True)\nwait(1,SECONDS)\nelavator.spin_to_position(0,DEGREES,wait=False)\n'''\nrollers.stop()\ndrivetrain.drive_for(FORWARD,300,MM)\n","textLanguage":"python","rconfig":[{"port":[1,6],"name":"elavator","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[2,7,0],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:2","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[8,9],"name":"rollers","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[],"name":"controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"none"},"triportSourcePort":22},{"port":[3],"name":"pneumatic_3","customName":false,"deviceType":"Pneumatic","deviceClass":"pneumatic","setting":{"cylinder1":"cylinder1","cylinder2":"cylinder2","cylinder1_reversed":"false","cylinder2_reversed":"false"},"triportSourcePort":22}],"slot":4,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"target":"Physical"}